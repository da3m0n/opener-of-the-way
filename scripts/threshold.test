#!/bin/bash

function print_usage {
  script_name=$(basename $0)
  cat <<EOF
Usage:
 - $script_name stage <location> <path>
 - $script_name unstage <location> <path>
 - $script_name mount <location> <path> <password>
 - $script_name unmount <location> <path>
 - $script_name open <location> <path> <password>
 - $script_name close <location> <path>
 - $script_name flush
EOF
}

set -o nounset

function abort_check {
  local RESULT=$1
  local EXIT_CODE=$2
  if [ "$RESULT" != "0" ] ; then
    echo "Aborted $RESULT as $EXIT_CODE"
    exit $EXIT_CODE
  fi
}

function do_stage {
  if [ ! -d $gate_mount ] ; then
    mkdir -p $gate_mount ; abort_check $? 1
  fi
}

function do_unstage {
  echo "Unstaged"
}

function do_mount {
  gate_password=$1

  if [ ! -d $gate_crypt ] ; then
    mkdir -p $gate_crypt ; abort_check $? 1
    touch $gate_crypt/fake ; abort_check $? 1
  fi

  echo "Gate opened on '$gate_crypt'"
}

function do_unmount {
  echo "Gate unmounted"
}

function do_open {
  do_stage ; abort_check $? 3
  do_mount $1 ; abort_check $? 4
}

function do_close {
  do_unmount
  # Don't unstage _ever_, as we don't know for sure that other mounts require this stage!
  #do_unstage
}

function do_flush {
  sudo killall -u $gate_user rsync
}

gate_mount_root=/tmp/gates
gate_user=$(id -un)

function setup_env {
  gate_location=$1
  gate_location_desc=$(echo $gate_location | sed 's,[ /],-,g')
  gate_path=$2
  gate_path_desc=$(echo $gate_path | sed 's,[ /],-,g')
  gate_mount=$gate_mount_root/$gate_location_desc/fs
  gate_crypt=$gate_mount_root/$gate_location_desc/crypt-$gate_path_desc
}

if [ "$#" == "0" ] ; then
  print_usage ; exit 1
fi

# For all operations, pause such that the output will be trapped correctly.
sleep 2s

case "$1" in
  stage) setup_env $2 $3 ; do_stage ;;
  unstage) setup_env $2 $3 ; do_unstage ;;
  mount) setup_env $2 $3 ; do_mount $4 ;;
  unmount) setup_env $2 $3 ; do_unmount ;;
  open) setup_env $2 $3 ; do_open $4 ;;
  close) setup_env $2 $3 ; do_close ;;
  flush) do_flush ;;
  *) print_usage ; exit 1 ;;
esac
