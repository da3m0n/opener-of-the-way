#!/bin/bash

## create options, default to NTFS non-dynamic


function print_usage {
  script_name=$(basename $0)
  cat <<EOF
Usage:
 - $script_name stage <location> <path>
 - $script_name unstage <location> <path>
 - $script_name mount <location> <path> <password>
 - $script_name unmount <location> <path>
 - $script_name open <location> <path> <password>
 - $script_name close <location> <path>
 - $script_name flush
EOF
}

set -o nounset

function abort_check {
  if [ $1 != 0 ] ; then
    echo "Aborted"
    exit $1
  fi
}

function mount_gate_mount {
  sudo mount -t cifs //$gate_location $gate_mount --verbose -o _netdev,rw,noexec,user=$1,password=$2 2>&1
}

function do_stage {
  if [ ! -d $gate_mount ] ; then
    mkdir -p $gate_mount
  fi

  if [ $(mount | grep $gate_mount -c) == 0 ] ; then
    echo "Staging"
    #TODO  rw / ro depending on gate mode
    mount_gate_mount sqatest ***REMOVED***
    local result=$?
    if [ $result != 0 ] ; then
      return $result
    fi
    #if [ $? != 0 ] ; then
    #  mount_gate_mount wmtdev ***REMOVED***
    #  local result=$?
    #  if [ $result != 0 ] ; then
    #    return $result
    #  fi
    #fi
  fi

  ls $gate_mount/.. >/dev/null 2>&1
  if [ $? != 0 ] ; then
    return 2
  fi  
}

function do_unstage {
  sudo umount $gate_mount
  return $?
}

function do_mount {
  gate_password=$1

  if [ ! -d $gate_crypt ] ; then
    mkdir -p $gate_crypt
    touch $gate_crypt/closed
  fi

  if [ $(sudo truecrypt -t -l --non-interactive | grep $gate_crypt -c) == 0 ] ; then
    echo "Mounting"
    sudo truecrypt -t --non-interactive --password=$gate_password $gate_mount/$gate_path $gate_crypt --fs-options="uid=$(id -u $gate_user),gid=$(id -g $gate_user)" 2>&1
    local result=$?
    if [ $result != 0 ] ; then
      return $result
    fi
  fi

  ls $gate_crypt/closed >/dev/null 2>&1
  if [ $? == 0 ] ; then
    echo "Detected closed flag"
    return 2
  fi

  echo "Gate opened on '$gate_crypt'"
}

function do_unmount {
  if [ -d $gate_crypt ] ; then
    if [ $(sudo truecrypt -t -l --non-interactive | grep $gate_crypt -c) != 0 ] ; then
      sudo truecrypt -t --non-interactive -d $gate_mount/$gate_path
    fi
  fi

  local result=$?
  if [ $result != 0 ] ; then
    echo "Failed to unmount gate"
    return $result
  fi

  echo "Gate unmounted"
}

function do_open {
  do_stage
  local result=$?
  if [ $result != 0 ] ; then
    do_unstage
    return $result
  fi

  do_mount $1
  result=$?
  if [ $result != 0 ] ; then
    do_unmount
    do_unstage
    return $result
  fi
}

function do_close {
  do_unmount
  do_unstage
}

function do_flush {
  sudo truecrypt -t --non-interactive -d --force
  sudo umount $gate_mount_root/*/fs
  sudo killall -u $gate_user rsync
}

gate_mount_root=/tmp/gates
gate_user=$(id -un)

function setup_env {
  gate_location=$1
  gate_location_desc=$(echo $gate_location | sed 's,[ /],-,g')
  gate_path=$2
  gate_path_desc=$(echo $gate_path | sed 's,[ /],-,g')
  gate_mount=$gate_mount_root/$gate_location_desc/fs
  gate_crypt=$gate_mount_root/$gate_location_desc/crypt-$gate_path_desc
}

if [ "$#" == "0" ] ; then
  print_usage ; exit 1
fi

# For all operations, pause such that the output will be trapped correctly.
sleep 2s

case "$1" in
  stage) setup_env $2 $3 ; do_stage ;;
  unstage) setup_env $2 $3 ; do_unstage ;;
  mount) setup_env $2 $3 ; do_mount $4 ;;
  unmount) setup_env $2 $3 ; do_unmount ;;
  open) setup_env $2 $3 ; do_open $4 ;;
  close) setup_env $2 $3 ; do_close ;;
  flush) do_flush ;;
  *) print_usage ; exit 1 ;;
esac
